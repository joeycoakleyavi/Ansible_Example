---
- name: Configure Avi Controller
  hosts: ctl
  become: no
  gather_facts: no
  connection: local
  roles:
    - role: avinetworks.avisdk
  vars_files:
    - vars/global/vars.yml
  tasks:
    - name: Configure SAML Auth Profile #https://github.com/avinetworks/devops/blob/be566c6b1534259046182deb743cf5956c8fe687/ansible/misc/tasks/create_auth_profile.yml
      avi_authprofile:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: "Azure AD"
        type: "AUTH_PROFILE_SAML"
        saml:
          idp:
            metadata: "{{ lookup('file', 'idp_metadata.xml') }}"
          sp:
            fqdn: us-east-1.joeycoakley.com
            saml_entity_type: "AUTH_SAML_DNS_FQDN"
            
    - name: Configure Read-Only Role #https://github.com/avinetworks/devops/blob/be566c6b1534259046182deb743cf5956c8fe687/ansible/misc/create_roles.yml
      avi_role:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: RO_Role
        privileges:
          - resource: PERMISSION_VIRTUALSERVICE
            type: READ_ACCESS
          - resource: PERMISSION_POOL
            type: NO_ACCESS
          - resource: PERMISSION_POOLGROUP
            type: NO_ACCESS
          - resource: PERMISSION_HTTPPOLICYSET
            type: READ_ACCESS
          - resource: PERMISSION_NETWORKSECURITYPOLICY
            type: READ_ACCESS
          - resource: PERMISSION_AUTOSCALE
            type: READ_ACCESS
          - resource: PERMISSION_DNSPOLICY
            type: READ_ACCESS
          - resource: PERMISSION_NETWORKPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_APPLICATIONPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_APPLICATIONPERSISTENCEPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_HEALTHMONITOR
            type: READ_ACCESS
          - resource: PERMISSION_ANALYTICSPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_IPAMDNSPROVIDERPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_CUSTOMIPAMDNSPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_TRAFFICCLONEPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_ICAP
            type: READ_ACCESS
          - resource: PERMISSION_IPADDRGROUP
            type: READ_ACCESS
          - resource: PERMISSION_STRINGGROUP
            type: READ_ACCESS
          - resource: PERMISSION_VSDATASCRIPTSET
            type: READ_ACCESS
          - resource: PERMISSION_PROTOCOLPARSER
            type: READ_ACCESS
          - resource: PERMISSION_SSLPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_AUTHPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_PINGACCESSAGENT
            type: READ_ACCESS
          - resource: PERMISSION_PKIPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_SSLKEYANDCERTIFICATE
            type: READ_ACCESS
          - resource: PERMISSION_CERTIFICATEMANAGEMENTPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_HARDWARESECURITYMODULEGROUP
            type: READ_ACCESS
          - resource: PERMISSION_SSOPOLICY
            type: READ_ACCESS
          - resource: PERMISSION_NATPOLICY
            type: READ_ACCESS
          - resource: PERMISSION_WAFPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_WAFPOLICY
            type: READ_ACCESS
          - resource: PERMISSION_WAFPOLICYPSMGROUP
            type: READ_ACCESS
          - resource: PERMISSION_ERRORPAGEPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_ERRORPAGEBODY
            type: READ_ACCESS
          - resource: PERMISSION_ALERTCONFIG
            type: READ_ACCESS
          - resource: PERMISSION_ALERT
            type: READ_ACCESS
          - resource: PERMISSION_ACTIONGROUPCONFIG
            type: READ_ACCESS
          - resource: PERMISSION_ALERTSYSLOGCONFIG
            type: READ_ACCESS
          - resource: PERMISSION_ALERTEMAILCONFIG
            type: READ_ACCESS
          - resource: PERMISSION_SNMPTRAPPROFILE
            type: READ_ACCESS
          - resource: PERMISSION_TRAFFIC_CAPTURE
            type: READ_ACCESS
          - resource: PERMISSION_CLOUD
            type: READ_ACCESS
          - resource: PERMISSION_SERVICEENGINE
            type: READ_ACCESS
          - resource: PERMISSION_SERVICEENGINEGROUP
            type: READ_ACCESS
          - resource: PERMISSION_NETWORK
            type: READ_ACCESS
          - resource: PERMISSION_VRFCONTEXT
            type: READ_ACCESS
          - resource: PERMISSION_USER_CREDENTIAL
            type: READ_ACCESS
          - resource: PERMISSION_SYSTEMCONFIGURATION
            type: READ_ACCESS
          - resource: PERMISSION_CONTROLLER
            type: READ_ACCESS
          - resource: PERMISSION_REBOOT
            type: READ_ACCESS
          - resource: PERMISSION_UPGRADE
            type: READ_ACCESS
          - resource: PERMISSION_TECHSUPPORT
            type: READ_ACCESS
          - resource: PERMISSION_INTERNAL
            type: READ_ACCESS
          - resource: PERMISSION_CONTROLLERSITE
            type: READ_ACCESS
          - resource: PERMISSION_IMAGE
            type: READ_ACCESS
          - resource: PERMISSION_USER
            type: READ_ACCESS
          - resource: PERMISSION_ROLE
            type: READ_ACCESS
          - resource: PERMISSION_TENANT
            type: READ_ACCESS
          - resource: PERMISSION_GSLB
            type: READ_ACCESS
          - resource: PERMISSION_GSLBSERVICE
            type: READ_ACCESS
          - resource: PERMISSION_GSLBGEODBPROFILE
            type: READ_ACCESS


    - name: Update System Configuration #https://github.com/avinetworks/devops/blob/be566c6b1534259046182deb743cf5956c8fe687/ansible/misc/avi_systemconfiguration.yml
      avi_systemconfiguration:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        tenant: admin
        state: present
        email_configuration:
          smtp_type: SMTP_NONE
        global_tenant_config:
          se_in_provider_context: true
          tenant_acccess_to_provider_se: true
          tenant_vrf: false
        ntp_configuration: "{{ ntp_config }}"
        dns_configuration: "{{ dns_config }}"
        portal_configuration:
          allow_basic_authentication: true
          disable_remote_cli_shell: false
          enable_clickjacking_protection: true
          enable_http: true
          enable_https: true
          password_strength_check: true
          redirect_to_https: true
          sslprofile_ref: "/api/sslprofile?name=System-Standard-Portal"
          use_uuid_from_input: false
        admin_auth_configuration:
          auth_profile_ref: "/api/authprofile/?name=Azure AD"
          mapping_rules:
          - index: 1
            group_match:
              groups:
              - avi-admins
              criteria: AUTH_MATCH_CONTAINS
            is_superuser: true
            role_refs:
              - "/api/role/?name=System-Admin"
          - index: 2
            group_match:
              groups:
              - avi-read
              criteria: AUTH_MATCH_CONTAINS
            is_superuser: false
            assign_role: ASSIGN_FROM_SELECT_LIST
            role_refs:
              - "/api/role/?name=RO_Role"
          allow_local_user_login: true
        welcome_workflow_complete: true

    - name: Configure AWS Cloud #https://github.com/avinetworks/devops/blob/be566c6b1534259046182deb743cf5956c8fe687/ansible/misc/tasks/create_avi_awscloud.yml
      avi_cloud:
        name: AWS
        vtype: CLOUD_AWS
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        aws_configuration:
          use_iam_roles: true
          route53_integration: true
          region: "{{ aws_region }}"
          vpc_id: "{{ vpc_id }}"
          zones: "{{ management_subnets }}"

    - name: Create Pool
      avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: HelloWorld-Pool
        lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
        health_monitor_refs: '/api/healthmonitor?name=System-HTTP'
        external_autoscale_groups:
          - "{{ asg_name }}"
        cloud_ref: '/api/cloud?name=AWS'

    - name: Create HelloWorld VsVIP
      avi_vsvip:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: vsvip-HelloWorld-AWS-Cloud
        tenant_ref: '/api/tenant?name=admin'
        cloud_ref: '/api/cloud?name=AWS'
        state: present
        vip:
          - vip_id: "1"
            avi_allocated_fip: false
            avi_allocated_vip: false
            auto_allocate_ip: true
            enabled: true
            auto_allocate_floating_ip: false
            auto_allocate_ip_type: V4_ONLY
            network_ref: '/api/network/{{ subnet_a_uuid }}#{{ subnet_a_name }}'
            subnet_uuid: '{{ subnet_a_uuid }}'
            subnet:
              ip_addr:
                addr: "10.20.200.0"
                type: "V4" 
              mask: 24
          - vip_id: "2"
            avi_allocated_fip: false
            avi_allocated_vip: false
            auto_allocate_ip: true
            enabled: true
            auto_allocate_floating_ip: false
            auto_allocate_ip_type: V4_ONLY
            network_ref: '/api/network/{{ subnet_b_uuid }}#{{ subnet_b_name }}'
            subnet_uuid: '{{ subnet_b_uuid }}'
            subnet:
              ip_addr:
                addr: "10.20.201.0"
                type: "V4" 
              mask: 24
        dns_info:
          - type: DNS_RECORD_A
            num_records_in_response: 1
            algorithm: DNS_RECORD_RESPONSE_CONSISTENT_HASH
            fqdn: HelloWorld.demoavi.us

    - name: Create HelloWorld VirtualService
      avi_virtualservice:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        name: HelloWorld-VS
        services:
          - port: 80
        pool_ref: '/api/pool?name=HelloWorld-Pool'
        vsvip_ref: '/api/vsvip?name=vsvip-HelloWorld-AWS-Cloud'
        cloud_ref: '/api/cloud?name=AWS'
          
